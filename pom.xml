<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>pl.kubiczak.felix.shark</groupId>
  <artifactId>parent</artifactId>
  <version>1.21-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Shark: Parent</name>
  <description>Parent maven module for all other Shark artifacts. Contains plugins configuration and default executions.</description>
  <url>https://shark.kubiczak.pl</url>

  <licenses>
    <license>
      <name>Creative Commons Attribution-NonCommercial 4.0 International Public License</name>
      <url>https://shark.kubiczak.pl/creativecommons-by-nc-4.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Jakub Kubiczak</name>
      <url>https://www.kubiczak.pl</url>
    </developer>
  </developers>

  <!-- maven prerequisites for plugins versions check by versions-maven-plugin -->
  <prerequisites>
    <maven>${version.required.maven}</maven>
  </prerequisites>

  <modules>
    <module>dependencies</module>
    <module>felix</module>
    <module>logging</module>
    <module>samples</module>
  </modules>

  <scm>
    <connection>scm:git:https://github.com/wiiitek/pl.kubiczak.felix.shark.parent.git</connection>
    <developerConnection>scm:git:git@github.com:wiiitek/pl.kubiczak.felix.shark.parent.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/wiiitek/pl.kubiczak.felix.shark.parent/tree/${project.scm.tag}</url>
  </scm>

  <distributionManagement>
    <repository>
      <id>ftps.maven.kubiczak.pl</id>
      <url>ftps://maven.kubiczak.pl/</url>
    </repository>
    <snapshotRepository>
      <id>ftps.staging.shark.kubiczak.pl</id>
      <url>ftps://staging.shark.kubiczak.pl/</url>
    </snapshotRepository>
    <site>
      <id>ftps.shark.kubiczak.pl</id>
      <url>ftps://shark.kubiczak.pl/</url>
    </site>
    <downloadUrl>http://maven.kubiczak.pl/pl/kubiczak/felix/shark/${project.artifactId}</downloadUrl>
  </distributionManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!--
      this property should be overwritten from commandline
      (see "Release instructions" in README file)
    -->
    <gpg.keyname>9A105524</gpg.keyname>

    <felix.dir>felix-framework</felix.dir>
    <felix.mirror>https://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.main.distribution</felix.mirror>

    <version.required.maven>3.0.5</version.required.maven>
    <version.felix>5.6.4</version.felix>
  </properties>

  <repositories>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>maven.kubiczak.pl</id>
      <url>http://maven.kubiczak.pl</url>
    </repository>
    <!-- added for new version of gemini blueprint -->
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>atlassian-3rd-party</id>
      <url>https://maven.atlassian.com/3rdparty/</url>
    </repository>
  </repositories>

  <build>

    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ftp</artifactId>
        <version>2.12</version>
      </extension>
    </extensions>
    <finalName>${project.groupId}-${project.artifactId}-${project.version}</finalName>

    <pluginManagement>
      <plugins>
        <!-- maven default plugins -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.7.0</version>
          <!-- this configuration is for default execution -->
          <configuration>
            <source>1.7</source>
            <target>1.7</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.20.1</version>
          <configuration>
            <systemPropertyVariables>
              <!--
                Pax Exam needs configuration for local Maven repo
                see: https://ops4j1.jira.com/browse/PAXEXAM-543
                this could be done in some active profile inside settings.xml file
              -->
              <org.ops4j.pax.url.mvn.localRepository>${maven.repo.local}</org.ops4j.pax.url.mvn.localRepository>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.servicemix.tooling</groupId>
          <artifactId>depends-maven-plugin</artifactId>
          <version>1.4.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.6</version>
          <!-- this configuration is for executions performed from command line (on demand) -->
          <configuration>
            <stagingRepositoryId>ftps.staging.shark.kubiczak.pl</stagingRepositoryId>
            <stagingSiteURL>ftps://staging.shark.kubiczak.pl/</stagingSiteURL>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>2.9</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
          <configuration>
            <encoding>UTF-8</encoding>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.10.4</version>
        </plugin>
        <!-- end of maven defaults plugins -->

        <!-- release plugins -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.3</version>
          <!-- this configuration is for executions performed from command line (on demand) -->
          <configuration>
            <tagNameFormat>@{project.version}</tagNameFormat>
            <!--
              will install released version in local maven repository
              this is needed for integration tests to pass
            -->
            <preparationGoals>clean install</preparationGoals>
            <!--
              will skip running tests after new development version is set
              see: http://maven.apache.org/maven-release/maven-release-plugin/perform-mojo.html#goals
            -->
            <goals>deploy site-deploy -DskipTests</goals>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <!-- end of release plugins -->

        <!-- source quality plugins -->
        <plugin>
          <groupId>com.github.ekryd.sortpom</groupId>
          <artifactId>sortpom-maven-plugin</artifactId>
          <version>2.8.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.4.1</version>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>extra-enforcer-rules</artifactId>
              <version>1.0-beta-4</version>
            </dependency>
            <dependency>
              <groupId>com.github.ferstl</groupId>
              <artifactId>pedantic-pom-enforcers</artifactId>
              <version>1.2.0</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>2.17</version>
        </plugin>
        <!-- end of source quality plugins -->

        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>wagon-maven-plugin</artifactId>
          <version>1.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>truezip-maven-plugin</artifactId>
          <version>1.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <!-- 'old-way' for OSGi services -->
        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-scr-plugin</artifactId>
          <version>1.24.0</version>
        </plugin>


        <!-- unit tests -->
        <!--
            This plugin is used to compile Groovy code.
            To learn more about it visit https://github.com/groovy/GMavenPlus/wiki
        -->
        <plugin>
          <groupId>org.codehaus.gmavenplus</groupId>
          <artifactId>gmavenplus-plugin</artifactId>
          <version>1.6</version>
          <executions>
            <execution>
              <goals>
                <goal>compile</goal>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>1.6</version>
          <!--
            configured here in order to enable signing artifacts by specifying goal:
            mvn gpg:sign
          -->
          <configuration>
            <!--
              this should be overwritten during signing AET artifacts
              with -Dgpg.keyname
              but when used with maven-release-plugin
              -Darguments="-Dgpg.keyname" should be used
              see http://maven.apache.org/plugins/maven-gpg-plugin/sign-mojo.html#keyname
              and http://maven.apache.org/maven-release/maven-release-plugin/prepare-mojo.html#arguments
            -->
            <keyname>${gpg.keyname}</keyname>
            <executable>gpg2</executable>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>check-plugins-versions</id>
            <phase>validate</phase>
            <goals>
              <goal>display-plugin-updates</goal>
            </goals>
            <configuration>
              <logOutput>false</logOutput>
              <outputFile>${project.basedir}/src/main/resources/plugins-report.txt</outputFile>
            </configuration>
          </execution>
        </executions>
        <inherited>false</inherited>
      </plugin>
      <plugin>
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>sort-pom</id>
            <phase>validate</phase>
            <goals>
              <goal>sort</goal>
            </goals>
            <configuration>
              <keepBlankLines>true</keepBlankLines>
              <createBackupFile>false</createBackupFile>
              <expandEmptyElements>false</expandEmptyElements>
              <nrOfIndentSpace>2</nrOfIndentSpace>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- This plugin validates maven configuration and environment -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>check-modules-and-environment</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <!-- default rules -->
                <dependencyConvergence />
                <requireMavenVersion>
                  <version>${version.required.maven}</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <!-- JAVA 1.8.0 is required by sortpom-maven-plugin:2.5.0 -->
                  <version>1.8.0</version>
                </requireJavaVersion>
                <!-- Mojo extra-enforcer-rules -->
                <banCircularDependencies />
                <!-- pedantic-pom-enforcers rules -->
                <moduleOrder implementation="com.github.ferstl.maven.pomenforcers.PedanticModuleOrderEnforcer" />
                <dependencConfiguration implementation="com.github.ferstl.maven.pomenforcers.PedanticDependencyConfigurationEnforcer" />
                <pluginConfiguration implementation="com.github.ferstl.maven.pomenforcers.PedanticPluginConfigurationEnforcer" />
              </rules>
            </configuration>
          </execution>
        </executions>
        <inherited>true</inherited>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <executions>
          <execution>
            <id>check-google-style</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <!-- predefined -->
              <failsOnError>true</failsOnError>
              <configLocation>google_checks.xml</configLocation>
              <violationSeverity>info</violationSeverity>
              <encoding>UTF-8</encoding>
              <includeTestSourceDirectory>true</includeTestSourceDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-descriptor-to-main-artifact</id>
            <phase>initialize</phase>
            <goals>
              <goal>attach-descriptor</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>index</report>
              <report>dependencies</report>
              <report>dependency-info</report>
              <report>dependency-convergence</report>
              <report>license</report>
              <report>summary</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>sign</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
